@tailwind base;
@tailwind components;
@tailwind utilities;
@tailwind variants;

html,
body {
	@apply h-full overflow-hidden;
}

.python-cursor {
	cursor: url('/cursor/python_cursor.svg'), crosshair;
}

.python-cursor .node {
	cursor: url('/cursor/python_cursor.svg'), crosshair !important;
}

.border-1 {
	border-width: 1px;
}

.max-h-half {
	max-height: 50vh;
}

.max-h-3-4 {
	max-height: 75vh;
}

.max-h-4-5 {
	max-height: 80vh;
}

.max-h-9-10 {
	max-height: 90vh;
}

.max-h-1-3 {
	max-height: 33vh;
}

.rete-context-menu .subitems {
	width: fit-content !important;
	min-width: 120px;
	max-height: 33vh;
	overflow-y: auto;
	overflow-x: hidden;
}

.rete-context-menu .block:not(.hasSubitems):not(:has(.search)) {
	padding-right: 1em;
	padding-left: 1em;
}


@keyframes slideInLeftToRight {
	from {
		transform: translateX(-100%);
	}
	to {
		transform: translateX(0);
	}
}

.slide-in-l2r {
	animation: slideInLeftToRight 0.5s ease-in-out forwards;
}

.minimap {
	transition: background-color 0.1s ease-in-out;
}
.dark .minimap {
	background-color: rgba(55,68,107, 0.65) !important;
}

.minimap .mini-viewport {
	transition: border-color 0.1s ease-in-out, background-color 0.1s ease-in-out;	
}

[data-theme]:not([data-theme="skeleton"]) .minimap .mini-viewport {
	border-color: rgb(var(--color-tertiary-400) / 0.5) !important;
	background-color: rgba(var(--color-tertiary-400) / 0.2) !important;

}

.dark .minimap .mini-viewport {
	--tw-ring-opacity: 1;
	border-color: rgb(var(--color-tertiary-500) / var(--tw-ring-opacity)) !important;
	background-color: rgba(var(--color-tertiary-500) / 0.2) !important;
}